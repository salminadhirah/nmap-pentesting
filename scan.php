<?php
ini_set('display_errors', 1);
error_reporting(E_ALL);

// Database configuration
$servername = "192.168.80.131";
$username = "sally";
$password = "Violets2_";
$dbname = "nmap_reports";

$port = 3306; // Change this to the actual port number if it's different from 3306
$mysqli = new mysqli($servername, $username, $password, $dbname, $port);

// Check the database connection
if ($mysqli->connect_error) {
    die("Connection failed: " . $mysqli->connect_error);
}

// Check if the 'target' parameter is set in the POST request
if (isset($_POST['target'])) {
    $target = $_POST['target'];
    $output = shell_exec("nmap -sV -Pn --script=http-enum,http-vuln-* $target -p 80,443" );

    // Store the scanning result in the database
    $sql = "INSERT INTO scan_results (target, result) VALUES (?, ?)";
    $stmt = $mysqli->prepare($sql);
    $stmt->bind_param("ss", $target, $output);
    if ($stmt->execute()) {
        //echo "Scan results stored successfully in the database.";
    } else {
        echo "Error: " . $sql . "<br>" . $stmt->error;
    }
    $stmt->close();

    // Generate report for the latest scan result
    $latestScanResult = getLatestScanResult();
    $report = generateReport($target, $latestScanResult);
    echo "<h3>Scan Report</h3>";
    echo "<pre>" . $report . "</pre>";

    // Logout button
    // Logout button
    echo '<form action="login.php" method="post">';
    echo '<input type="submit" value="Logout" />';
    echo '</form>';
    
}

// Close the database connection
$mysqli->close();

// Function to get the latest scan result
function getLatestScanResult()
{
    global $mysqli;
    $sql = "SELECT result FROM scan_results ORDER BY scan_time DESC";
    $result = $mysqli->query($sql);

    if ($result->num_rows > 0) {
        $row = $result->fetch_assoc();
        return $row["result"];
    } else {
        return "Scan result not found.";
    }
}

// Function to generate a report based on a specific scan result
function generateReport($target, $result)
{
    // Customize this function to format the report according to your requirements
    $openPorts = extractOpenPorts($result);
    $report = "Target: " . $target . "\n";
    $report .= "Result: " . $result . "\n";
    if (!empty($openPorts)) {
        $report .= "Open Ports:\n";
        foreach ($openPorts as $port) {
            $report .= "- " . $port . "\n";
        }
    } else {
        $report .= "No open ports found.\n";
    }
    $report .= "Report generated on: " . date('Y-m-d H:i:s') . "\n";

    return $report;
}

function extractOpenPorts($result)
{
    $openPorts = array();

    // Regular expression pattern to match open ports
    $pattern = '/(\d+)\/(tcp|udp)\s+open/';

    // Perform the regular expression match
    preg_match_all($pattern, $result, $matches);

    // Extract the matched ports
    if (isset($matches[1]) && isset($matches[2])) {
        $portNumbers = $matches[1];
        $protocols = $matches[2];

        // Combine the port numbers and protocols
        for ($i = 0; $i < count($portNumbers); $i++) {
            $port = $portNumbers[$i] . '/' . $protocols[$i];
            $openPorts[] = $port;
        }
    }

    return $openPorts;
}
?>
